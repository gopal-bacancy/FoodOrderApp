{"ast":null,"code":"var _jsxFileName = \"/home/gopal-bacancy/Downloads/01-starting-project (5)/01-starting-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer, useState } from \"react\";\nimport CartContext from \"./cart-context\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data;\nAxios.post(\"http://localhost:3000/getCartItems\", {\n  userid: localStorage.getItem(\"userid\")\n}).then(response => {\n  data = response.data.map(item => {\n    const c = {\n      name: item.name,\n      price: item.price\n    };\n  });\n});\ndebugger;\nconst defaultCartState = {\n  items: {\n    data\n  },\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      debugger;\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n      const p = {\n        userid: localStorage.getItem(\"userid\"),\n        name: state.items[Number(action.id[1]) - 1].name\n      };\n      Axios.post(\"http://localhost:3000/deleteFromCart\", {\n        p\n      }).then(response => {});\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/gopal-bacancy/Downloads/01-starting-project (5)/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","useState","CartContext","Axios","data","post","userid","localStorage","getItem","then","response","map","item","c","name","price","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","p","Number","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer, useState } from \"react\";\nimport CartContext from \"./cart-context\";\nimport Axios from \"axios\";\n\nlet data;\nAxios.post(\"http://localhost:3000/getCartItems\", {\n    userid: localStorage.getItem(\"userid\"),\n  }).then((response) => {\n    data=response.data.map((item)=>{\n      const c={\n        name:item.name,\n        price: item.price,\n        \n        \n      }\n\n    });\n   \n  })\n  debugger\nconst defaultCartState = {\n  items: {data},\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  \n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n      \n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        \n        amount: existingCartItem.amount + action.item.amount,\n      };\n     \n      updatedItems = [...state.items];\n      debugger\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n      \n      const p = {\n        userid: localStorage.getItem(\"userid\"),\n        name: state.items[Number(action.id[1]) - 1].name,\n      };\n      Axios.post(\"http://localhost:3000/deleteFromCart\", { p }).then(\n        (response) => {}\n      );\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n  \n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}